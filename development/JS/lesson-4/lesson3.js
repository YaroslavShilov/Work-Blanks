console.log('Простое сообщение');
console.log('Простое сообщение c форматированием: s% <<=====>> s%', 'Данные', 'Ещё данные'); //стрелки просто для примера

///////////////////////////////////////////////////////////////////////////////////////////////////////////

console.info('информационное сообщение');
console.warn('Предупреждение о чем либо');
//console.error('Какая-то ошибка');

///////////////////////////////////////////////////////////////////////////////////////////////////////////

/*
console.group('Группа1');
	console.group('Группа2');
		console.log('Сообщение1');
		console.log('Сообщение2');
		console.log('Сообщение3');
	console.groupEnd();
console.groupEnd();
*/

///////////////////////////////////////////////////////////////////////////////////////////////////////////

console.time('Таймер 1');
	for (var i = 1; i <= 200000; i++) {
		var a = i / i;
	}
	// выведет скорость выполнения кода внутри этого таймера
console.timeEnd('Таймер 1');

///////////////////////////////////////////////////////////////////////////////////////////////////////////

/*
console.profile('Профайл 1');
function f1() {
	console.log('1');
	function f2() {
		console.log('2');
		console.trace('выводит стек вызовов');
	}

	f2();

	console.log('3');
}

f1()

console.profileEnd();
*/

///////////////////////////////////////////////////////////////////////////////////////////////////////////

function di(a, b) {
	// if (b != 0) {
	// 	return a / b;
	// }

	if(b == 0) {
		//console.error('На ноль делить нельзя!!!');
		throw new Error('На ноль делить нельзя!!!'); //отличие в том, что выполнение кода после этой ошибки прекращается
	}
	if(b < 0) {
		throw new Error('Делитель должен быть положительным числом!!!');
	}
	else {
		return a / b;
	}

}

try { //если в этом блоке выбросится исключение(throw new Error)
	//debugger; //код остановится
	let res = di(10, 5);
	console.log(res + 1000);
} catch(e) { // то выполнится этот код
	//console.error('Ошибка');
	console.error(e.message); //выведет сообщение ошибки
} finally { // выполняется в конце, после try и catch в не зависимости от результата
	console.log('Finally')
}